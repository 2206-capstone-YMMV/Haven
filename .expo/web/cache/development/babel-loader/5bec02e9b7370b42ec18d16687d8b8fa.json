{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ThunkMiddleware from \"redux-thunk\";\nimport { db } from \"../firebase\";\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\nvar initialState = {};\nvar GET_SINGLEPOST = \"GET_SINGLEPOST\";\n\nvar getPost = function getPost(post) {\n  return {\n    type: GET_SINGLEPOST,\n    post: post\n  };\n};\n\nexport var get_Post = function get_Post(user) {\n  return function () {\n    var _ref = _asyncToGenerator(function* (dispatch) {\n      var unsbuscribe = onSnapshot(query(collection(db, \"Post\"), where(\"createAt\", \"==\", user.createAt)), function (snapshot) {\n        return dispatch(getPost(snapshot.docs[0].data()));\n      });\n      return unsbuscribe;\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_SINGLEPOST:\n      return action;\n\n    default:\n      return state;\n  }\n};\n\nexport var store = createStore(reducer, applyMiddleware(ThunkMiddleware));","map":{"version":3,"names":["createStore","applyMiddleware","ThunkMiddleware","db","collection","onSnapshot","query","where","initialState","GET_SINGLEPOST","getPost","post","type","get_Post","user","dispatch","unsbuscribe","createAt","snapshot","docs","data","reducer","state","action","store"],"sources":["C:/Users/16476/Documents/GitHub/Haven/redux/index.js"],"sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport ThunkMiddleware from \"redux-thunk\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\r\n// initial State\r\nconst initialState = {};\r\n\r\nconst GET_SINGLEPOST = \"GET_SINGLEPOST\";\r\n\r\nconst getPost = (post) => ({\r\n  type: GET_SINGLEPOST,\r\n  post,\r\n});\r\n\r\nexport const get_Post = (user) => {\r\n  return async (dispatch) => {\r\n    const unsbuscribe = onSnapshot(\r\n      query(collection(db, \"Post\"), where(\"createAt\", \"==\", user.createAt)),\r\n      (snapshot) =>\r\n        // console.log('------------------------------------',snapshot.docs[0].data())\r\n        dispatch(getPost(snapshot.docs[0].data()))\r\n    );\r\n    return unsbuscribe;\r\n  };\r\n};\r\n// Reducer\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_SINGLEPOST:\r\n      return action;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Store\r\nexport const store = createStore(reducer, applyMiddleware(ThunkMiddleware));"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,EAAT;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,KAAxC,QAAqD,oBAArD;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,IAAMC,cAAc,GAAG,gBAAvB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;EAAA,OAAW;IACzBC,IAAI,EAAEH,cADmB;IAEzBE,IAAI,EAAJA;EAFyB,CAAX;AAAA,CAAhB;;AAKA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;EAChC;IAAA,6BAAO,WAAOC,QAAP,EAAoB;MACzB,IAAMC,WAAW,GAAGX,UAAU,CAC5BC,KAAK,CAACF,UAAU,CAACD,EAAD,EAAK,MAAL,CAAX,EAAyBI,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmBO,IAAI,CAACG,QAAxB,CAA9B,CADuB,EAE5B,UAACC,QAAD;QAAA,OAEEH,QAAQ,CAACL,OAAO,CAACQ,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,IAAjB,EAAD,CAAR,CAFV;MAAA,CAF4B,CAA9B;MAMA,OAAOJ,WAAP;IACD,CARD;;IAAA;MAAA;IAAA;EAAA;AASD,CAVM;;AAYP,IAAMK,OAAO,GAAG,SAAVA,OAAU,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBd,YAAyB;EAAA,IAAXe,MAAW;;EAChD,QAAQA,MAAM,CAACX,IAAf;IACE,KAAKH,cAAL;MACE,OAAOc,MAAP;;IACF;MACE,OAAOD,KAAP;EAJJ;AAMD,CAPD;;AAUA,OAAO,IAAME,KAAK,GAAGxB,WAAW,CAACqB,OAAD,EAAUpB,eAAe,CAACC,eAAD,CAAzB,CAAzB"},"metadata":{},"sourceType":"module"}