{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { collection, onSnapshot, query, where, addDoc } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MessagesTab(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      people = _useState2[0],\n      setPeople = _useState2[1];\n\n  var conversations = route.params.conversations;\n  var talking = [];\n  conversations.forEach(function (convo) {\n    talking.push(convo.user);\n    talking.push(convo.otherUser);\n  });\n\n  if (talking.length === 0) {\n    talking.push(auth.currentUser.uid);\n  }\n\n  console.log('Starting New Conversation');\n  console.log(talking);\n  useEffect(function () {\n    return onSnapshot(query(collection(db, 'users'), where('uid', 'not-in', talking)), function (snapshot) {\n      return setPeople(snapshot.docs.map(function (user) {\n        console.log('hi');\n        return user.data();\n      }));\n    });\n  }, []);\n\n  var newConversation = function newConversation(person) {\n    addDoc(collection(db, 'Conversations'), {\n      user: auth.currentUser.uid,\n      conversationId: auth.currentUser.id + person.uid\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n    addDoc(collection(db, 'Conversations'), {\n      user: person.uid,\n      conversationId: auth.currentUser.id + person.uid\n    }).then(navigation.navigate('Messages')).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: people.map(function (person, index) {\n      return _jsx(Text, {\n        onClick: function onClick() {\n          return newConversation(person);\n        },\n        children: person.name\n      }, index);\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","auth","db","collection","onSnapshot","query","where","addDoc","MessagesTab","navigation","route","people","setPeople","conversations","params","talking","forEach","convo","push","user","otherUser","length","currentUser","uid","console","log","snapshot","docs","map","data","newConversation","person","conversationId","id","catch","error","alert","message","then","navigate","flex","alignItems","justifyContent","index","name"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/StartConversation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Text, View } from \"react-native\";\r\nimport { auth } from '../firebase'\r\nimport { db } from '../firebase'\r\nimport { collection, onSnapshot, query, where, addDoc } from 'firebase/firestore' \r\n\r\nexport default function MessagesTab({ navigation, route }) {\r\n    \r\n    const [people, setPeople] = useState([])\r\n\r\n    let { conversations } = route.params\r\n            let talking = []\r\n            conversations.forEach(convo => { //Making an array with all users this user is talking to\r\n                talking.push(convo.user)\r\n                talking.push(convo.otherUser)\r\n            })\r\n            if (talking.length === 0){\r\n                talking.push(auth.currentUser.uid)\r\n            }\r\n            console.log('Starting New Conversation')\r\n            console.log(talking)\r\n\r\n    useEffect(\r\n        () => \r\n            onSnapshot(query(collection(db, 'users'), where('uid', 'not-in', talking)), (snapshot) =>\r\n            setPeople(snapshot.docs.map(user => {\r\n                console.log('hi')\r\n                return user.data()\r\n            }))),\r\n          [])\r\n\r\n    const newConversation = (person) => {\r\n        addDoc(collection(db, 'Conversations'),{user: auth.currentUser.uid, conversationId: auth.currentUser.id + person.uid})\r\n        .catch(error => alert(error.message))\r\n        addDoc(collection(db, 'Conversations'),{user: person.uid, conversationId: auth.currentUser.id + person.uid})\r\n        .then(navigation.navigate('Messages'))\r\n        .catch(error => alert(error.message))\r\n    }\r\n    \r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center'}}>\r\n            {people.map((person,index) => <Text key={index} onClick={() => newConversation(person)}>{person.name}</Text>)}\r\n        </View>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}