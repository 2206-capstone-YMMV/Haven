{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { collection, onSnapshot, query, where, addDoc, getDocs } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Message(_ref) {\n  var route = _ref.route;\n  var conversationId = route.params.conversationId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversation = _useState2[0],\n      setConversation = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayName = _useState6[0],\n      setDisplayName = _useState6[1];\n\n  useEffect(function () {\n    return onSnapshot(query(collection(db, \"Messages\"), where(\"conversationId\", \"==\", conversationId)), function (snapshot) {\n      return setConversation(snapshot.docs.map(function (convo) {\n        console.log(\"Grabbing Messages\");\n        return convo.data();\n      }).sort(function (a, b) {\n        return a.timestamp - b.timestamp;\n      }));\n    });\n  }, []);\n\n  if (!displayName) {\n    var _auth$currentUser;\n\n    getDocs(query(collection(db, \"users\"), where(\"uid\", \"==\", (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid))).then(function (user) {\n      console.log(\"Grabbing Username\"), setDisplayName(user.docs[0].data());\n    });\n  }\n\n  var handleSend = function handleSend() {\n    addDoc(collection(db, \"Messages\"), {\n      conversationId: conversationId,\n      timestamp: Date.now(),\n      messenger: displayName,\n      content: message\n    }).then(function () {\n      setMessage(\"\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    keyboardVerticalOffset: 100,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.messageContainer,\n        children: conversation.map(function (convo, index) {\n          if (convo.messenger.uid !== auth.currentUser.uid) {\n            return _jsx(Text, {\n              style: styles.message,\n              children: convo.messenger.name + ': ' + convo.content\n            }, index);\n          } else {\n            return _jsx(Text, {\n              style: [styles.message, styles.user],\n              children: 'You: ' + convo.content\n            }, index);\n          }\n        })\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(TextInput, {\n          placeholder: \"Message\",\n          value: message,\n          onChangeText: function onChangeText(text) {\n            return setMessage(text);\n          },\n          style: styles.input,\n          multiline: true,\n          blurOnSubmit: true\n        }), _jsx(TouchableOpacity, {\n          onPress: handleSend,\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Send\"\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  messageContainer: {\n    alignSelf: \"flex-start\",\n    alignItems: \"left\",\n    paddingHorizontal: \"10%\",\n    width: '100%'\n  },\n  message: {\n    backgroundColor: \"white\",\n    paddingVertical: 5,\n    paddingHorizontal: 5,\n    marginTop: 5,\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  user: {\n    alignSelf: 'flex-end'\n  },\n  inputContainer: {\n    alignSelf: \"center\",\n    width: \"80%\",\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  input: {\n    width: \"80%\"\n  },\n  buttonContainer: {\n    width: \"20%\"\n  },\n  button: {\n    padding: 5,\n    backgroundColor: \"#0782F9\",\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","db","collection","onSnapshot","query","where","addDoc","getDocs","Message","route","conversationId","params","conversation","setConversation","message","setMessage","displayName","setDisplayName","snapshot","docs","map","convo","console","log","data","sort","a","b","timestamp","currentUser","uid","then","user","handleSend","Date","now","messenger","content","catch","error","alert","flex","alignItems","justifyContent","styles","messageContainer","index","name","inputContainer","text","input","button","buttonText","StyleSheet","create","alignSelf","paddingHorizontal","width","backgroundColor","paddingVertical","marginTop","borderRadius","overflow","flexDirection","marginBottom","buttonContainer","padding","color","fontWeight","fontSize"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/Message.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { auth } from \"../firebase\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n  addDoc,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\n\r\nexport default function Message({ route }) {\r\n  const { conversationId } = route.params;\r\n  const [conversation, setConversation] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(\r\n        query(\r\n          collection(db, \"Messages\"),\r\n          where(\"conversationId\", \"==\", conversationId)\r\n        ),\r\n        (snapshot) =>\r\n          setConversation(\r\n            snapshot.docs\r\n              .map((convo) => {\r\n                console.log(\"Grabbing Messages\");\r\n                return convo.data();\r\n              })\r\n              .sort((a, b) => a.timestamp - b.timestamp)\r\n          )\r\n      ),\r\n    []\r\n  );\r\n\r\n  if (!displayName) {\r\n    getDocs(\r\n      query(collection(db, \"users\"), where(\"uid\", \"==\", auth.currentUser?.uid))\r\n    ).then((user) => {\r\n      console.log(\"Grabbing Username\"),\r\n        setDisplayName(user.docs[0].data());\r\n    });\r\n  }\r\n\r\n  const handleSend = () => {\r\n    addDoc(collection(db, \"Messages\"), {\r\n      conversationId,\r\n      timestamp: Date.now(),\r\n      messenger: displayName,\r\n      content: message,\r\n    })\r\n      .then(() => {\r\n        setMessage(\"\");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\"\r\n      style={{ flex: 1, alignItems: \"center\", justifyContent: \"space-between\" }}\r\n      keyboardVerticalOffset={100}\r\n    >\r\n    <ScrollView>\r\n      <View style={styles.messageContainer}>\r\n        {conversation.map((convo, index) => {\r\n          if(convo.messenger.uid !== auth.currentUser.uid){\r\n            return (<Text key={index} style={styles.message}>\r\n              {convo.messenger.name + ': ' + convo.content}\r\n            </Text>)\r\n          }\r\n          else{\r\n            return (<Text key={index} style={[styles.message, styles.user]}>\r\n              {'You: ' + convo.content}\r\n            </Text>)\r\n          }\r\n          })}\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder=\"Message\"\r\n          value={message}\r\n          onChangeText={(text) => setMessage(text)}\r\n          style={styles.input}\r\n          multiline={true}\r\n          blurOnSubmit={true}\r\n        ></TextInput>\r\n        <TouchableOpacity onPress={handleSend} style={styles.button}>\r\n          <Text style={styles.buttonText}>Send</Text>\r\n        </TouchableOpacity>\r\n        \r\n      </View>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  messageContainer: {\r\n    alignSelf: \"flex-start\",\r\n    alignItems: \"left\",\r\n    paddingHorizontal: \"10%\",\r\n    width: '100%'\r\n  },\r\n  message: {\r\n    backgroundColor: \"white\",\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 5,\r\n    marginTop: 5,\r\n    borderRadius: 10,\r\n    overflow: 'hidden'\r\n  },\r\n  user: {\r\n    alignSelf: 'flex-end'\r\n  },\r\n  inputContainer: {\r\n    alignSelf: \"center\",\r\n    width: \"80%\",\r\n    backgroundColor: \"white\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  input: {\r\n    width: \"80%\"\r\n  },\r\n  buttonContainer: {\r\n    width: \"20%\",\r\n  },\r\n  button: {\r\n    padding: 5,\r\n    backgroundColor: \"#0782F9\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontWeight: \"700\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}