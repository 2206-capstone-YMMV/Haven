{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { collection, onSnapshot, query, where, getDocs } from 'firebase/firestore';\nimport { StackActions } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MessagesTab(_ref) {\n  var navigation = _ref.navigation,\n      reset = _ref.reset;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      otherUsers = _useState4[0],\n      setOtherUsers = _useState4[1];\n\n  useEffect(function () {\n    var _auth$currentUser;\n\n    return onSnapshot(query(collection(db, 'Conversations'), where('user', '==', (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid)), function (snapshot) {\n      return setConversations(snapshot.docs.map(function (convo) {\n        console.log('Grabbing conversations');\n        return convo.data();\n      }));\n    });\n  }, []);\n  console.log(reset);\n\n  if (reset) {\n    var _auth$currentUser2;\n\n    reset = null;\n    onSnapshot(query(collection(db, 'Conversations'), where('user', '==', (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid)), function (snapshot) {\n      return setConversations(snapshot.docs.map(function (convo) {\n        console.log('Grabbing conversations');\n        return convo.data();\n      }));\n    });\n  }\n\n  var conversationIds = conversations.map(function (convo) {\n    return convo.conversationId;\n  });\n  var otherUsersId = conversations.map(function (convo) {\n    return convo.otherUser;\n  });\n\n  if (otherUsersId.length === 0) {\n    otherUsersId.push('aaaaaaaaaaa');\n  }\n\n  if (conversations.length > 0 && otherUsers.length === 0) {\n    getDocs(query(collection(db, 'users'), where('uid', 'in', otherUsersId))).then(function (users) {\n      return setOtherUsers(users.docs.map(function (user) {\n        console.log('Grabbing Friends');\n        return user.data();\n      }));\n    });\n  }\n\n  var names = otherUsersId.map(function (id) {\n    for (var i = 0; i < otherUsers.length; i++) {\n      if (otherUsers[i].uid === id) {\n        return otherUsers[i].name;\n      }\n    }\n  });\n  console.log(names);\n\n  var dismount = function dismount() {\n    navigation.dispatch(StackActions.pop(1));\n    navigation.navigate('NewConversation', {\n      conversations: conversations\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      style: [styles.convo, styles.new],\n      onPress: function onPress() {\n        return dismount();\n      },\n      children: \"New Conversation\"\n    }), conversationIds.map(function (conversationId, index) {\n      return _jsxs(Text, {\n        style: styles.convo,\n        onPress: function onPress() {\n          return navigation.navigate('Message', {\n            conversationId: conversationId\n          });\n        },\n        children: [\"Conversation with \", names[index]]\n      }, index);\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  new: {\n    marginBottom: '10%'\n  },\n  convo: {\n    backgroundColor: 'white',\n    paddingVertical: 5,\n    paddingHorizontal: 5,\n    marginTop: 5,\n    borderRadius: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","db","collection","onSnapshot","query","where","getDocs","StackActions","MessagesTab","navigation","reset","conversations","setConversations","otherUsers","setOtherUsers","currentUser","uid","snapshot","docs","map","convo","console","log","data","conversationIds","conversationId","otherUsersId","otherUser","length","push","then","users","user","names","id","i","name","dismount","dispatch","pop","navigate","flex","alignItems","styles","new","index","StyleSheet","create","marginBottom","backgroundColor","paddingVertical","paddingHorizontal","marginTop","borderRadius"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/MessagesTab.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { auth } from '../firebase'\r\nimport { db } from '../firebase'\r\nimport { collection, onSnapshot, query, where, getDocs } from 'firebase/firestore' \r\nimport { StackActions } from '@react-navigation/native';\r\n\r\nexport default function MessagesTab({ navigation, reset }) {\r\n    const [conversations, setConversations] = useState([])\r\n    const [otherUsers, setOtherUsers] = useState([])\r\n\r\n    useEffect(\r\n        () => \r\n            onSnapshot(query(collection(db, 'Conversations'), where('user', '==', auth.currentUser?.uid)), (snapshot) =>\r\n            setConversations(snapshot.docs.map(convo => {\r\n                console.log('Grabbing conversations')\r\n                return convo.data()\r\n            }))\r\n            )\r\n        ,[])\r\n    console.log(reset)\r\n    if (reset){\r\n        reset = null\r\n        onSnapshot(query(collection(db, 'Conversations'), where('user', '==', auth.currentUser?.uid)), (snapshot) =>\r\n            setConversations(snapshot.docs.map(convo => {\r\n                console.log('Grabbing conversations')\r\n                return convo.data()\r\n            }))\r\n            )\r\n    }\r\n    \r\n    const conversationIds = conversations.map(convo => convo.conversationId)\r\n    const otherUsersId = conversations.map(convo => convo.otherUser)\r\n\r\n    if (otherUsersId.length === 0){\r\n        otherUsersId.push('aaaaaaaaaaa')\r\n    }\r\n\r\n    if (conversations.length > 0 && otherUsers.length === 0){ //After the conversations have been grabbed, but dont want this to repeat when page rerenders\r\n            getDocs(query(collection(db, 'users'), where('uid', 'in', otherUsersId)))\r\n            .then(users =>\r\n            setOtherUsers(users.docs.map(user => {\r\n                console.log('Grabbing Friends')\r\n                return user.data()\r\n            })))\r\n        }\r\n\r\n    \r\n    const names = otherUsersId.map(id => { //lining up names with the order of the conversationIds\r\n        for (let i = 0; i < otherUsers.length; i++){\r\n            if (otherUsers[i].uid === id){\r\n                return otherUsers[i].name\r\n            }\r\n        }\r\n    })\r\n\r\n    console.log(names)\r\n\r\n    const dismount = () => {\r\n        navigation.dispatch(StackActions.pop(1))\r\n        navigation.navigate('NewConversation', { conversations })\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center'}}>\r\n            <Text style={[styles.convo, styles.new]} onPress={() => dismount()}>New Conversation</Text>\r\n            {conversationIds.map((conversationId,index) => <Text key={index} style={styles.convo} onPress={() => navigation.navigate('Message', {conversationId})}>Conversation with {names[index]}</Text>)}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    new: {\r\n        marginBottom: '10%'\r\n    },\r\n    convo: {\r\n        backgroundColor: 'white',\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 5,\r\n        marginTop: 5,\r\n        borderRadius: 10\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}