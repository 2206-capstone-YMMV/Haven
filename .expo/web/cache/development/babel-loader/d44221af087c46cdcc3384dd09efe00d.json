{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { collection, onSnapshot, query, where } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MessagesTab(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1];\n\n  useEffect(function () {\n    var _auth$currentUser;\n\n    return onSnapshot(query(collection(db, 'Conversations'), where('user', '==', (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid)), function (snapshot) {\n      return setConversations(snapshot.docs.map(function (convo) {\n        console.log('Grabbing conversations');\n        return convo.data();\n      }));\n    });\n  }, []);\n  var conversationIds = conversations.map(function (convo) {\n    return convo.conversationId;\n  });\n  var otherUsers = conversations.map(function (convo) {\n    return convo.otherUser;\n  });\n  console.log(conversations);\n  console.log(conversationIds);\n  console.log(otherUsers);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      onPress: function onPress() {\n        return navigation.navigate('NewConversation', {\n          conversations: conversations\n        });\n      },\n      children: \"New Conversation\"\n    }), conversationsIds.map(function (conversationId, index) {\n      return _jsxs(Text, {\n        onPress: function onPress() {\n          return navigation.navigate('Message', {\n            ConversationId: ConversationId\n          });\n        },\n        children: [\"Conversation with \", otherUsers[index]]\n      }, index);\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","auth","db","collection","onSnapshot","query","where","MessagesTab","navigation","conversations","setConversations","currentUser","uid","snapshot","docs","map","convo","console","log","data","conversationIds","conversationId","otherUsers","otherUser","flex","alignItems","justifyContent","navigate","conversationsIds","index","ConversationId"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/MessagesTab.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Text, View } from \"react-native\";\r\nimport { auth } from '../firebase'\r\nimport { db } from '../firebase'\r\nimport { collection, onSnapshot, query, where } from 'firebase/firestore' \r\n\r\nexport default function MessagesTab({ navigation }) {\r\n    const [conversations, setConversations] = useState([])\r\n\r\n    useEffect(\r\n        () => \r\n            onSnapshot(query(collection(db, 'Conversations'), where('user', '==', auth.currentUser?.uid)), (snapshot) =>\r\n            setConversations(snapshot.docs.map(convo => {\r\n                console.log('Grabbing conversations')\r\n                return convo.data()\r\n            }))\r\n            )\r\n    ,[])\r\n    \r\n    const conversationIds = conversations.map(convo => convo.conversationId)\r\n    const otherUsers = conversations.map(convo => convo.otherUser)\r\n    console.log(conversations)\r\n    console.log(conversationIds)\r\n    console.log(otherUsers)\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center'}}>\r\n            <Text onPress={() => navigation.navigate('NewConversation', {conversations })}>New Conversation</Text>\r\n            {conversationsIds.map((conversationId,index) => <Text key={index} onPress={() => navigation.navigate('Message', {ConversationId})}>Conversation with {otherUsers[index]}</Text>)}\r\n        </View>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,IAAT;AACA,SAASC,EAAT;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,KAAxC,QAAqD,oBAArD;;;AAEA,eAAe,SAASC,WAAT,OAAqC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAChD,gBAA0CR,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOS,aAAP;EAAA,IAAsBC,gBAAtB;;EAEAX,SAAS,CACL;IAAA;;IAAA,OACIK,UAAU,CAACC,KAAK,CAACF,UAAU,CAACD,EAAD,EAAK,eAAL,CAAX,EAAkCI,KAAK,CAAC,MAAD,EAAS,IAAT,uBAAeL,IAAI,CAACU,WAApB,qBAAe,kBAAkBC,GAAjC,CAAvC,CAAN,EAAqF,UAACC,QAAD;MAAA,OAC/FH,gBAAgB,CAACG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,KAAK,EAAI;QACxCC,OAAO,CAACC,GAAR,CAAY,wBAAZ;QACA,OAAOF,KAAK,CAACG,IAAN,EAAP;MACH,CAHgB,CAAD,CAD+E;IAAA,CAArF,CADd;EAAA,CADK,EAQR,EARQ,CAAT;EAUA,IAAMC,eAAe,GAAGX,aAAa,CAACM,GAAd,CAAkB,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACK,cAAV;EAAA,CAAvB,CAAxB;EACA,IAAMC,UAAU,GAAGb,aAAa,CAACM,GAAd,CAAkB,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACO,SAAV;EAAA,CAAvB,CAAnB;EACAN,OAAO,CAACC,GAAR,CAAYT,aAAZ;EACAQ,OAAO,CAACC,GAAR,CAAYE,eAAZ;EACAH,OAAO,CAACC,GAAR,CAAYI,UAAZ;EAGA,OACI,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEE,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CAAb;IAAA,WACI,KAAC,IAAD;MAAM,OAAO,EAAE;QAAA,OAAMlB,UAAU,CAACmB,QAAX,CAAoB,iBAApB,EAAuC;UAAClB,aAAa,EAAbA;QAAD,CAAvC,CAAN;MAAA,CAAf;MAAA;IAAA,EADJ,EAEKmB,gBAAgB,CAACb,GAAjB,CAAqB,UAACM,cAAD,EAAgBQ,KAAhB;MAAA,OAA0B,MAAC,IAAD;QAAkB,OAAO,EAAE;UAAA,OAAMrB,UAAU,CAACmB,QAAX,CAAoB,SAApB,EAA+B;YAACG,cAAc,EAAdA;UAAD,CAA/B,CAAN;QAAA,CAA3B;QAAA,iCAAsGR,UAAU,CAACO,KAAD,CAAhH;MAAA,GAAWA,KAAX,CAA1B;IAAA,CAArB,CAFL;EAAA,EADJ;AAMH"},"metadata":{},"sourceType":"module"}