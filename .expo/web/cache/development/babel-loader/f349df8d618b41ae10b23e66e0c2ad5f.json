{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { collection, onSnapshot, query, where, getDocs } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MessagesTab(_ref) {\n  var navigation = _ref.navigation,\n      conversations = _ref.conversations;\n  var talking = [];\n  conversations.forEach(function (convo) {\n    talking.push(conversations.user);\n    talking.push(conversations.otherUser);\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      people = _useState2[0],\n      setPeople = _useState2[1];\n\n  useEffect(function () {\n    if (talking.length > 0) {\n      getDocs(query(collection(db, 'users'), where('uid', 'not-in', talking))).then(function (users) {\n        return setPeople(users.docs.map(function (user) {\n          return user.data();\n        }));\n      });\n    }\n  });\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: people.map(function (person, index) {\n      return _jsx(Text, {\n        children: person\n      }, index);\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","auth","db","collection","onSnapshot","query","where","getDocs","MessagesTab","navigation","conversations","talking","forEach","convo","push","user","otherUser","people","setPeople","length","then","users","docs","map","data","flex","alignItems","justifyContent","person","index"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/StartConversation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Text, View } from \"react-native\";\r\nimport { auth } from '../firebase'\r\nimport { db } from '../firebase'\r\nimport { collection, onSnapshot, query, where, getDocs } from 'firebase/firestore' \r\n\r\nexport default function MessagesTab({ navigation, conversations }) {\r\n\r\n    let talking = []\r\n    conversations.forEach(convo => {\r\n        talking.push(conversations.user)\r\n        talking.push(conversations.otherUser)\r\n    })\r\n\r\n    const [people, setPeople] = useState([])\r\n    useEffect(\r\n        () => {\r\n            if (talking.length > 0){\r\n                getDocs(query(collection(db, 'users'), where('uid', 'not-in', talking)))\r\n                .then(users => setPeople(users.docs.map(user => user.data())))\r\n            }\r\n          })\r\n    \r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center'}}>\r\n            {people.map((person,index) => <Text key={index}>{person}</Text>)}\r\n        </View>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,IAAT;AACA,SAASC,EAAT;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,OAA/C,QAA8D,oBAA9D;;AAEA,eAAe,SAASC,WAAT,OAAoD;EAAA,IAA7BC,UAA6B,QAA7BA,UAA6B;EAAA,IAAjBC,aAAiB,QAAjBA,aAAiB;EAE/D,IAAIC,OAAO,GAAG,EAAd;EACAD,aAAa,CAACE,OAAd,CAAsB,UAAAC,KAAK,EAAI;IAC3BF,OAAO,CAACG,IAAR,CAAaJ,aAAa,CAACK,IAA3B;IACAJ,OAAO,CAACG,IAAR,CAAaJ,aAAa,CAACM,SAA3B;EACH,CAHD;;EAKA,gBAA4BhB,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOiB,MAAP;EAAA,IAAeC,SAAf;;EACAnB,SAAS,CACL,YAAM;IACF,IAAIY,OAAO,CAACQ,MAAR,GAAiB,CAArB,EAAuB;MACnBZ,OAAO,CAACF,KAAK,CAACF,UAAU,CAACD,EAAD,EAAK,OAAL,CAAX,EAA0BI,KAAK,CAAC,KAAD,EAAQ,QAAR,EAAkBK,OAAlB,CAA/B,CAAN,CAAP,CACCS,IADD,CACM,UAAAC,KAAK;QAAA,OAAIH,SAAS,CAACG,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAAAR,IAAI;UAAA,OAAIA,IAAI,CAACS,IAAL,EAAJ;QAAA,CAAnB,CAAD,CAAb;MAAA,CADX;IAEH;EACF,CANE,CAAT;EAQA,OACI,KAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CAAb;IAAA,UACKV,MAAM,CAACM,GAAP,CAAW,UAACK,MAAD,EAAQC,KAAR;MAAA,OAAkB,KAAC,IAAD;QAAA,UAAmBD;MAAnB,GAAWC,KAAX,CAAlB;IAAA,CAAX;EADL,EADJ;AAKH"},"metadata":{},"sourceType":"module"}