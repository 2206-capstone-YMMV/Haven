{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { auth } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/core';\nimport { db } from \"../firebase\";\nimport { collection, addDoc } from 'firebase/firestore';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      role = _useState6[0],\n      setRole = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pwd = _useState8[0],\n      setPwd = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pwd2 = _useState10[0],\n      setPwd2 = _useState10[1];\n\n  var colRef = collection(db, 'users');\n\n  var SignUp = function SignUp() {\n    if (pwd == pwd2) {\n      createUserWithEmailAndPassword(auth, email, pwd).then(function (x) {\n        addDoc(colRef, {\n          uid: x.user.uid,\n          email: email,\n          name: name,\n          role: role\n        });\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    } else {\n      alert(\"Passwords are different!\");\n    }\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Full Name\",\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email Address\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Who are you? (User or Helper)\",\n      onChangeText: function onChangeText(text) {\n        return setRole(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPwd(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPwd2(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: SignUp,\n      style: [styles.button],\n      children: _jsx(Text, {\n        style: styles.buttonOutLineText,\n        children: \"Sign Up\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      style: [styles.button, styles.buttonOutline],\n      children: _jsx(Text, {\n        style: styles.buttonOutLineText,\n        children: \"Back\"\n      })\n    })]\n  });\n};\n\nexport default SignUpScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","auth","useNavigation","db","collection","addDoc","createUserWithEmailAndPassword","SignUpScreen","navigation","email","setEmail","name","setName","role","setRole","pwd","setPwd","pwd2","setPwd2","colRef","SignUp","then","x","uid","user","catch","error","alert","message","styles","input","text","button","buttonOutLineText","navigate","buttonOutline","StyleSheet","create","container","flex","justifyContent","alignItems","inputContainer","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","buttonContainer","padding","borderColor","borderWidth","buttonText","color","fontWeight","fontSize","buttonOutlineText"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/SignUpScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { auth } from '../firebase'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { db } from '../firebase'\r\nimport { collection, addDoc} from 'firebase/firestore' \r\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\r\n\r\nconst SignUpScreen = () => {\r\n    const navigation = useNavigation()\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [role, setRole] = useState('')\r\n    const [pwd, setPwd] = useState('')\r\n    const [pwd2, setPwd2] = useState('')\r\n    const colRef = collection(db, 'users')\r\n\r\n    const SignUp = () => {\r\n        if (pwd == pwd2) {\r\n            createUserWithEmailAndPassword(auth, email, pwd)\r\n                .then((x) => {\r\n                 addDoc(colRef, {\r\n                    uid: x.user.uid,\r\n                    email: email,\r\n                    name: name,\r\n                    role: role,\r\n                 })\r\n                })\r\n                .catch((error) => {\r\n                    alert(error.message)\r\n                });\r\n        } else {\r\n            alert(\"Passwords are different!\")\r\n        }\r\n    }\r\n\r\n  return (\r\n    <View>\r\n        <TextInput style={styles.input} placeholder=\"Full Name\" onChangeText={text => setName(text)} />\r\n        <TextInput style={styles.input} placeholder=\"Email Address\" onChangeText={text => setEmail(text)} />\r\n        <TextInput style={styles.input} placeholder=\"Who are you? (User or Helper)\" onChangeText={text => setRole(text)}/>\r\n        <TextInput style={styles.input} placeholder=\"Password\" secureTextEntry={true}  onChangeText={text => setPwd(text)}/>\r\n        <TextInput style={styles.input} placeholder=\"Confirm Password\" secureTextEntry={true}  onChangeText={text => setPwd2(text)}/>\r\n\r\n        <TouchableOpacity\r\n            onPress={SignUp}\r\n            style={[styles.button]}\r\n        >\r\n            <Text style={styles.buttonOutLineText}>Sign Up</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n            onPress={() => navigation.navigate('Login')}\r\n            style={[styles.button, styles.buttonOutline]}\r\n        >\r\n            <Text style={styles.buttonOutLineText}>Back</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default SignUpScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    inputContainer: {\r\n      width: '80%'\r\n    },\r\n    input: {\r\n      backgroundColor: 'white',\r\n      paddingHorizontal: 15,\r\n      paddingVertical: 10,\r\n      borderRadius: 10,\r\n      marginTop: 5,\r\n    },\r\n    buttonContainer: {\r\n      width: '60%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: 40,\r\n    },\r\n    button: {\r\n      backgroundColor: '#0782F9',\r\n      width: '100%',\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n    },\r\n    buttonOutline: {\r\n      backgroundColor: 'white',\r\n      marginTop: 5,\r\n      borderColor: '#0782F9',\r\n      borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n      color: 'white',\r\n      fontWeight: '700',\r\n      fontSize: 16,\r\n    },\r\n    buttonOutlineText: {\r\n      color: '#0782F9',\r\n      fontWeight: '700',\r\n      fontSize: 16,\r\n    },\r\n  })"],"mappings":"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"},"metadata":{},"sourceType":"module"}