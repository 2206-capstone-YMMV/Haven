{"ast":null,"code":"import * as React from \"react\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Map from \"./Map\";\nimport Profile from \"./Profile\";\nimport Posts from \"./Posts\";\nimport MessagesTab from \"./MessagesTab\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Home(_ref) {\n  var navigation = _ref.navigation,\n      convoidentifier = _ref.convoidentifier;\n  console.log(navigation);\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Map\",\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n          var rn = route.name;\n\n          if (rn === \"Map\") {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (rn === \"Posts\") {\n            iconName = focused ? 'Posts' : 'Posts-outline';\n          } else if (rn === \"Profile\") {\n            iconName = focused ? 'Profile' : 'Profile-outline';\n          } else if (rn === \"Messages\") {\n            iconName = focused ? 'Messages' : 'Messages-outline';\n          }\n\n          return _jsx(Text, {\n            children: \"No Image\"\n          });\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Map\",\n      component: Map\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile\n    }), _jsx(Tab.Screen, {\n      name: \"Posts\",\n      component: Posts\n    }), _jsx(Tab.Screen, {\n      name: \"Messages\",\n      options: {\n        headerShown: false\n      },\n      children: function children() {\n        return _jsx(MessagesTab, {\n          convoidentifier: convoidentifier\n        });\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Map","Profile","Posts","MessagesTab","Tab","Home","navigation","convoidentifier","console","log","route","tabBarIcon","focused","color","size","iconName","rn","name","headerShown"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/Home.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { Text } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\nimport Map from './Map'\r\nimport Profile from './Profile'\r\nimport Posts from './Posts'\r\nimport MessagesTab from './MessagesTab'\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function Home({ navigation, convoidentifier }){\r\n    console.log(navigation)\r\n    return (\r\n            <Tab.Navigator \r\n            initialRouteName=\"Map\"\r\n            screenOptions={({route}) => ({\r\n                tabBarIcon: ({focused, color, size}) => {\r\n                    let iconName\r\n                    let rn = route.name\r\n                    if (rn === \"Map\"){\r\n                        iconName = focused ? 'home' : 'home-outline'\r\n                    }\r\n                    else if (rn === \"Posts\"){\r\n                        iconName = focused ? 'Posts' : 'Posts-outline'\r\n                    }\r\n                    else if (rn === \"Profile\"){\r\n                        iconName = focused ? 'Profile' : 'Profile-outline'\r\n                    }\r\n                    else if (rn === \"Messages\"){\r\n                        iconName = focused ? 'Messages' : 'Messages-outline'\r\n                    }\r\n                    return <Text>No Image</Text>\r\n                },\r\n            })}>\r\n                <Tab.Screen name=\"Map\" component={Map}/>\r\n                <Tab.Screen name=\"Profile\" component={Profile}/>\r\n                <Tab.Screen name=\"Posts\" component={Posts}/>\r\n                <Tab.Screen name=\"Messages\" options={{ headerShown: false }}>\r\n                    {() => <MessagesTab convoidentifier={convoidentifier}/>}\r\n                </Tab.Screen>\r\n            </Tab.Navigator>\r\n    )\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,OAAOC,GAAP;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,OAAOC,WAAP;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AAEA,eAAe,SAASM,IAAT,OAA8C;EAAA,IAA9BC,UAA8B,QAA9BA,UAA8B;EAAA,IAAlBC,eAAkB,QAAlBA,eAAkB;EACzDC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EACA,OACQ,MAAC,GAAD,CAAK,SAAL;IACA,gBAAgB,EAAC,KADjB;IAEA,aAAa,EAAE;MAAA,IAAEI,KAAF,SAAEA,KAAF;MAAA,OAAc;QACzBC,UAAU,EAAE,2BAA4B;UAAA,IAA1BC,OAA0B,SAA1BA,OAA0B;UAAA,IAAjBC,KAAiB,SAAjBA,KAAiB;UAAA,IAAVC,IAAU,SAAVA,IAAU;UACpC,IAAIC,QAAJ;UACA,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;UACA,IAAID,EAAE,KAAK,KAAX,EAAiB;YACbD,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;UACH,CAFD,MAGK,IAAII,EAAE,KAAK,OAAX,EAAmB;YACpBD,QAAQ,GAAGH,OAAO,GAAG,OAAH,GAAa,eAA/B;UACH,CAFI,MAGA,IAAII,EAAE,KAAK,SAAX,EAAqB;YACtBD,QAAQ,GAAGH,OAAO,GAAG,SAAH,GAAe,iBAAjC;UACH,CAFI,MAGA,IAAII,EAAE,KAAK,UAAX,EAAsB;YACvBD,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;UACH;;UACD,OAAO,KAAC,IAAD;YAAA;UAAA,EAAP;QACH;MAjBwB,CAAd;IAAA,CAFf;IAAA,WAqBI,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,KAAjB;MAAuB,SAAS,EAAEZ;IAAlC,EArBJ,EAsBI,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,SAAjB;MAA2B,SAAS,EAAEC;IAAtC,EAtBJ,EAuBI,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,OAAjB;MAAyB,SAAS,EAAEC;IAApC,EAvBJ,EAwBI,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,UAAjB;MAA4B,OAAO,EAAE;QAAEgB,WAAW,EAAE;MAAf,CAArC;MAAA,UACK;QAAA,OAAM,KAAC,WAAD;UAAa,eAAe,EAAEX;QAA9B,EAAN;MAAA;IADL,EAxBJ;EAAA,EADR;AA8BH"},"metadata":{},"sourceType":"module"}