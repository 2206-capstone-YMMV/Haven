{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { auth } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { collection, onSnapshot, query, where, addDoc } from 'firebase/firestore';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MessagesTab(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      people = _useState2[0],\n      setPeople = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var filteredPeople = people.filter(function (user) {\n    return user.name.indexOf(search) >= 0;\n  });\n  var conversations = route.params.conversations;\n  var talking = [];\n  conversations.forEach(function (convo) {\n    talking.push(convo.user);\n    talking.push(convo.otherUser);\n  });\n\n  if (talking.length === 0) {\n    talking.push(auth.currentUser.uid);\n  }\n\n  useEffect(function () {\n    return onSnapshot(query(collection(db, 'users'), where('uid', 'not-in', talking)), function (snapshot) {\n      return setPeople(snapshot.docs.map(function (user) {\n        return user.data();\n      }));\n    });\n  }, []);\n\n  var newConversation = function newConversation(person) {\n    addDoc(collection(db, 'Conversations'), {\n      user: auth.currentUser.uid,\n      otherUser: person.uid,\n      conversationId: auth.currentUser.uid + person.uid\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n    addDoc(collection(db, 'Conversations'), {\n      user: person.uid,\n      otherUser: auth.currentUser.uid,\n      conversationId: auth.currentUser.uid + person.uid\n    }).then(navigation.navigate('Messages')).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var newConversationAlert = function newConversationAlert(person) {\n    Alert.alert(\"New Conversation\", \"Start a conversation with \" + person.name, [{\n      text: \"Create\",\n      onPress: function onPress() {\n        return newConversation(person);\n      }\n    }, {\n      text: \"Cancel\",\n      style: \"cancel\"\n    }]);\n  };\n\n  return _jsxs(LinearGradient, {\n    colors: [\"#8c5aa5\", \"#f2e797\"],\n    style: {\n      padding: 5,\n      flex: 1,\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"New Conversation\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      value: search,\n      placeholder: \"Search By Name\",\n      underlineColorAndroid: \"transparent\",\n      onChangeText: function onChangeText(text) {\n        return setSearch(text);\n      }\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.list,\n      children: filteredPeople.map(function (person, index) {\n        if (person.role === 'helper') {\n          return _jsx(Text, {\n            style: [styles.person, styles.helper],\n            onPress: function onPress() {\n              return newConversation(person);\n            },\n            children: person.name\n          }, index);\n        } else {\n          return _jsx(Text, {\n            style: styles.person,\n            onPress: function onPress() {\n              return newConversationAlert(person);\n            },\n            children: person.name\n          }, index);\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    fontSize: '50%'\n  },\n  list: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  person: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 10,\n    borderRadius: 10,\n    borderColor: \"navy\",\n    borderWidth: 5,\n    overflow: \"hidden\",\n    fontSize: 20\n  },\n  helper: {\n    borderColor: \"black\"\n  },\n  textInput: {\n    width: '70%',\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    fontSize: 16,\n    paddingVertical: 8,\n    marginBottom: 30,\n    borderColor: '#009688',\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","db","collection","onSnapshot","query","where","addDoc","LinearGradient","MessagesTab","navigation","route","people","setPeople","search","setSearch","filteredPeople","filter","user","name","indexOf","conversations","params","talking","forEach","convo","push","otherUser","length","currentUser","uid","snapshot","docs","map","data","newConversation","person","conversationId","catch","error","alert","message","then","navigate","newConversationAlert","Alert","text","onPress","style","padding","flex","alignItems","styles","header","textInput","list","index","role","helper","StyleSheet","create","fontSize","flexDirection","flexWrap","justifyContent","backgroundColor","margin","borderRadius","borderColor","borderWidth","overflow","width","paddingLeft","paddingVertical","marginBottom"],"sources":["C:/Users/16476/Documents/GitHub/Haven/screens/StartConversation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, ScrollView, Alert } from \"react-native\";\r\nimport { auth } from '../firebase'\r\nimport { db } from '../firebase'\r\nimport { collection, onSnapshot, query, where, addDoc } from 'firebase/firestore' \r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nexport default function MessagesTab({ navigation, route }) {\r\n    \r\n    const [people, setPeople] = useState([])\r\n    const [search, setSearch] = useState('')\r\n\r\n    const filteredPeople = people.filter((user) => {\r\n        return user.name.indexOf(search) >= 0\r\n    })\r\n\r\n    let { conversations } = route.params\r\n            let talking = []\r\n            conversations.forEach(convo => { //Making an array with all users this user is talking to\r\n                talking.push(convo.user)\r\n                talking.push(convo.otherUser)\r\n            })\r\n            if (talking.length === 0){ //if no conversations have been started only exclude the current user. not-in needs none empty array\r\n                talking.push(auth.currentUser.uid)\r\n            }\r\n        \r\n\r\n    useEffect(\r\n        () => \r\n            onSnapshot(query(collection(db, 'users'), where('uid', 'not-in', talking)), (snapshot) =>\r\n            setPeople(snapshot.docs.map(user => {\r\n                return user.data()\r\n            }))),\r\n          [])\r\n\r\n    const newConversation = (person) => {\r\n        addDoc(collection(db, 'Conversations'),{user: auth.currentUser.uid, otherUser: person.uid, conversationId: auth.currentUser.uid + person.uid})\r\n        .catch(error => alert(error.message))\r\n        addDoc(collection(db, 'Conversations'),{user: person.uid, otherUser: auth.currentUser.uid, conversationId: auth.currentUser.uid + person.uid})\r\n        .then(navigation.navigate('Messages'))\r\n        .catch(error => alert(error.message))\r\n    }\r\n\r\n    const newConversationAlert = (person) => {\r\n        Alert.alert(\r\n          `New Conversation`,\r\n          `Start a conversation with ${person.name}`,\r\n          [\r\n            {\r\n              text: \"Create\",\r\n              onPress: () => newConversation(person)\r\n            },\r\n            {\r\n              text: \"Cancel\",\r\n              style: \"cancel\"\r\n            }\r\n          ]\r\n        )\r\n      }\r\n    \r\n    return (\r\n        <LinearGradient colors={[\"#8c5aa5\", \"#f2e797\"]} style={{padding: 5, flex: 1, alignItems: 'center'}}>\r\n            <Text style={styles.header}>New Conversation</Text>\r\n            <TextInput \r\n                style={styles.textInput}\r\n                value={search}\r\n                placeholder='Search By Name'\r\n                underlineColorAndroid='transparent'\r\n                onChangeText={(text) => setSearch(text)}\r\n            />\r\n            <ScrollView contentContainerStyle={styles.list}>\r\n                {filteredPeople.map((person,index) => {\r\n                if (person.role === 'helper'){\r\n                    return <Text key={index} style={[styles.person, styles.helper]} onPress={() => newConversation(person)}>{person.name}</Text>\r\n                }\r\n                else{\r\n                    return <Text key={index} style={styles.person} onPress={() => newConversationAlert(person)}>{person.name}</Text>\r\n                }})}\r\n            </ScrollView>\r\n        </LinearGradient>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        fontSize: '50%'\r\n    },\r\n    list: {\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\"\r\n    },\r\n    person: {\r\n        backgroundColor: 'white',\r\n        padding: 20,\r\n        margin: 10,\r\n        borderRadius: 10,\r\n        borderColor: \"navy\",\r\n        borderWidth: 5,\r\n        overflow: \"hidden\",\r\n        fontSize: 20,\r\n    },\r\n    helper: {\r\n        borderColor: \"black\"\r\n    },\r\n    textInput: {\r\n        width: '70%',\r\n        borderWidth: 1,\r\n        paddingLeft: 20,\r\n        margin: 5,\r\n        fontSize: 16,\r\n        paddingVertical: 8,\r\n        marginBottom: 30,\r\n        borderColor: '#009688',\r\n        backgroundColor: 'white',\r\n      },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}