{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{UnavailabilityError}from'expo-modules-core';import ExpoSplashScreen from\"./ExpoSplashScreen\";export function preventAutoHideAsync(){return _preventAutoHideAsync.apply(this,arguments);}function _preventAutoHideAsync(){_preventAutoHideAsync=_asyncToGenerator(function*(){if(!ExpoSplashScreen.preventAutoHideAsync){throw new UnavailabilityError('expo-splash-screen','preventAutoHideAsync');}return yield ExpoSplashScreen.preventAutoHideAsync();});return _preventAutoHideAsync.apply(this,arguments);}export function hideAsync(){return _hideAsync.apply(this,arguments);}function _hideAsync(){_hideAsync=_asyncToGenerator(function*(){if(!ExpoSplashScreen.hideAsync){throw new UnavailabilityError('expo-splash-screen','hideAsync');}return yield ExpoSplashScreen.hideAsync();});return _hideAsync.apply(this,arguments);}export function hide(){console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');hideAsync();}export function preventAutoHide(){console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');preventAutoHideAsync();}","map":{"version":3,"mappings":"uEAAA,OAASA,mBAAT,KAAoC,mBAApC,CAEA,MAAOC,iBAAP,0BAqBA,eAAsBC,qBAAtB,uD,yEAAO,WAAmC,CACxC,GAAI,CAACD,gBAAgB,CAACC,oBAAtB,CAA4C,CAC1C,KAAM,IAAIF,oBAAJ,CAAwB,oBAAxB,CAA8C,sBAA9C,CAAN,CACD,CACD,YAAaC,iBAAgB,CAACC,oBAAjB,EAAb,CACD,C,sDAQD,eAAsBC,UAAtB,4C,mDAAO,WAAwB,CAC7B,GAAI,CAACF,gBAAgB,CAACE,SAAtB,CAAiC,CAC/B,KAAM,IAAIH,oBAAJ,CAAwB,oBAAxB,CAA8C,WAA9C,CAAN,CACD,CACD,YAAaC,iBAAgB,CAACE,SAAjB,EAAb,CACD,C,2CAMD,MAAM,SAAUC,KAAV,EAAc,CAClBC,OAAO,CAACC,IAAR,CAAa,yEAAb,EACAH,SAAS,GACV,CAMD,MAAM,SAAUI,gBAAV,EAAyB,CAC7BF,OAAO,CAACC,IAAR,CACE,+FADF,EAGAJ,oBAAoB,GACrB","names":["UnavailabilityError","ExpoSplashScreen","preventAutoHideAsync","hideAsync","hide","console","warn","preventAutoHide"],"sourceRoot":"","sources":["../src/SplashScreen.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n// @needsAudit\n/**\n * Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called.\n *\n * > **Important note**: It is recommended to call this in global scope without awaiting, rather than\n * > inside React components or hooks, because otherwise this might be called too late,\n * > when the splash screen is already hidden.\n *\n * @example\n * ```ts\n * import * as SplashScreen from 'expo-splash-screen';\n *\n * SplashScreen.preventAutoHideAsync();\n *\n * export default function App() {\n *  // ...\n * }\n * ```\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\n// @needsAudit\n/**\n * Hides the native splash screen immediately. Be careful to ensure that your app has content ready\n * to display when you hide the splash screen, or you may see a blank screen briefly. See the\n * [\"Usage\"](#usage) section for an example.\n */\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n * @ignore\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n * @ignore\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"]},"metadata":{},"sourceType":"module"}