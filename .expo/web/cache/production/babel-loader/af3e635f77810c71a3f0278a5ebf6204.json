{"ast":null,"code":"var conversions=require(\"./conversions\");var route=require(\"./route\");var convert={};var models=Object.keys(conversions);function wrapRaw(fn){var wrappedFn=function wrappedFn(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}var arg0=args[0];if(arg0===undefined||arg0===null){return arg0;}if(arg0.length>1){args=arg0;}return fn(args);};if('conversion'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}function wrapRounded(fn){var wrappedFn=function wrappedFn(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}var arg0=args[0];if(arg0===undefined||arg0===null){return arg0;}if(arg0.length>1){args=arg0;}var result=fn(args);if(typeof result==='object'){for(var len=result.length,i=0;i<len;i++){result[i]=Math.round(result[i]);}}return result;};if('conversion'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}models.forEach(function(fromModel){convert[fromModel]={};Object.defineProperty(convert[fromModel],'channels',{value:conversions[fromModel].channels});Object.defineProperty(convert[fromModel],'labels',{value:conversions[fromModel].labels});var routes=route(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert[fromModel][toModel]=wrapRounded(fn);convert[fromModel][toModel].raw=wrapRaw(fn);});});module.exports=convert;","map":{"version":3,"names":["conversions","require","route","convert","models","Object","keys","wrapRaw","fn","wrappedFn","args","arg0","undefined","length","conversion","wrapRounded","result","len","i","Math","round","forEach","fromModel","defineProperty","value","channels","labels","routes","routeModels","toModel","raw","module","exports"],"sources":["C:/Users/16476/Documents/GitHub/Haven/node_modules/@react-navigation/bottom-tabs/node_modules/color-convert/index.js"],"sourcesContent":["const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}